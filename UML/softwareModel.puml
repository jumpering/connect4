@startuml

class Connect4{
    - boardView
    - yesNoDialog
    + playGame()
}
class YesNoDialogView{
    + read(message)
    + isAffirmative()
}
class Board{
    - tokens[]
    - inLine
    + reset(maxRows, maxColumns)
    + isFilledColumn(column)
    + putToken(column, color)
    + getFirstEmptyRowFromColumn(column)
    + isEndGame()
    + isFilled()
    + isInLineTokens()
    + getTokens()
}
class BoardView{
    - MAX_ROWS
    - MAX_COLUMNS
    - Board
    - TurnView
    + init()
    + show()
}
class inLine{
    - tokens
    - IN_LINE_NUMBER_OF_TOKENS
    + isInLineTokens(tokens)
    - isInLineHorizontal(color, inlineNumberOfTokens)
    - isInLineVertical(color, inlineNumberOfTokens)
    - isInLineDiagonal(color, inlineNumberOfTokens)
    - isInLineReverseDiagonal(color, inlineNumberOfTokens)
    - isColorOnPosition(row, column, color)
}

class Token{
    - Color
    + getColor()
}
class TurnView{
    - turn
    + getColumn(maxColumns)
    + nextTurn()
    + getColor()
}

class Turn{
    - color
    + getColor()
    + nextTurn()
}

enum Colors{
Red
Yellow
}

Connect4 ..> BoardView
Connect4 ..> YesNoDialogView

BoardView *--> Board
BoardView ..> TurnView
TurnView o--> Turn

Board o--> Token
Board o--> inLine

inLine ..> Colors

Turn ..> Token


Token *--> Colors
@enduml